package br.com.banco.services;

import org.springframework.beans.factory.annotation.Autowired;

import br.com.banco.converter.MyModelMapper;
import br.com.banco.data.model.Account;
import br.com.banco.data.vo.AccountVO;
import br.com.banco.repository.AccountRepository;


public class AccountService {

	@Autowired
	AccountRepository accountRepository;
	
	public AccountVO create(AccountVO accountVO) {
		// Creates ACCOUNT from AccountVO and saves it, returns original AccountVO
		Account entity = MyModelMapper.parseAccount(accountVO, Account.class);
		accountRepository.save(entity);
		return accountVO;
	}
	
	public AccountVO findByIdVO(Long id) {
		// Finds Account based of the Long value given
		// Returns AccountVO created from the Account found in the database
		var entity = accountRepository.findById(id).orElseThrow();
		AccountVO accountVO = MyModelMapper.parseAccountVO(entity, AccountVO.class);
		return accountVO;
	}
	
	public AccountVO update(AccountVO accountVO) {
		// Finds Account based of the key value from account VO
		Account account = MyModelMapper.parseAccount(findByIdVO(accountVO.getKey()), Account.class);
		
		// Updates the Account found
		account.setAccountBalance(accountVO.getAccountBalance());
		account.setAccountNumber(accountVO.getAccountNumber());
		account.setEmailAdress(accountVO.getEmailAdress());
		account.setHomeAdress(accountVO.getHomeAdress());
		account.setGender(accountVO.getGender());
		account.setFirstName(accountVO.getFullName().split(" ", 2)[0]);
		account.setLastName(accountVO.getFullName().split(" ", 2)[1]);
		
		// Saves the updated Account and returns the original account VO
		return MyModelMapper.parseAccountVO(accountRepository.save(account), AccountVO.class);
	}
	
	public void delete(Long id) {
		// Deletes Account based on the id, returns nothing.
		Account entity = accountRepository.findById(id).orElseThrow();
		accountRepository.delete(entity);
	}
	
}
